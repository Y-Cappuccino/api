from abc import ABC
import typing as t
from ycappuccino.api.core import YCappuccinoComponent


class IStorage(YCappuccinoComponent, ABC):

    def upsert(self, key: str, value: t.Any) -> None: ...
    def get(self, key: str) -> t.Any: ...

    def delete(self, key: str) -> None: ...

    def exists(self, key: str) -> bool: ...


class Query:
    @staticmethod
    def from_parser(params: str) -> "Query": ...


class IManager(YCappuccinoComponent, ABC):
    def get(self, key: str) -> t.Any: ...

    def set(self, key: str, value: t.Any) -> None: ...

    def delete(self, key: str) -> None: ...

    def exists(self, key: str) -> bool: ...

    def keys(self) -> t.List[str]: ...

    def values(self) -> t.List[t.Any]: ...

    def aggregate(self, key: str, query: Query) -> None: ...

    def items(self) -> t.List[t.Tuple[str, t.Any]]: ...
